import problems.leetcode.das.queues.QueueMovingAverageFromDataStream
import problems.leetcode.das.queues.QueuesDailyTemperatures
import problems.leetcode.das.queues.QueuesLongestContinuousSubarray
import problems.leetcode.das.queues.QueuesNumberOfRecentCalls
import problems.leetcode.das.queues.QueuesSlidingWindowMaximum

fun main() {
//    ProblemTwoSums().execute()
//    ProblemContainerWithMostWater().execute()
//    ProblemTrappingRainWater().execute()
//    ProblemReverseString().execute()
//    ProblemSquaresOfSortedArray().execute()
//    Example1().execute()
//    Example2().execute()
//    Example3().execute()
//    Example4().execute()
//    ProblemMaximumAverageSubarray().execute()
//    ProblemMaxConsecutiveOnesIII().execute()
//    Example1().execute()
//    Example2().execute()
//    ProblemSumOf1dArray().execute()
//    ProblemMinimumValueToGetPositiveStepByStepSum().execute()
//    ProblemKRadiusSubarrayAverages().execute()
//    TwoPointersReverseWordsInAStringIII().execute()
//    CheckingForExistenceExample2LetterToAppearTwice().execute()
//    CheckingForExistenceExample3UniqueNumbers().execute()
//    HashingCheckifSentenceIsPangram().execute()
//    HashingMissingNumber().execute()
//    HashingCountingNumbers().execute()
//    CountingExample1().execute()
//    CountingExample2().execute()
//    CountingExample3().execute()
//    CountingExample4().execute()
//    CountingExample5().execute()
//    HashingFindPlayersWithZeroOrOneLosses().execute()
//    HashingLargestUniqueNumber().execute()
//    HashingMaximumNumberOfBalloons().execute()
//    HashingContinousArray().execute()
//    MoreHashingExample1().execute()
//    MoreHashingExample2().execute()
//    MoreHashingExample3().execute()
//    MoreHashingExample3().execute()
//    MoreHashingExample4().execute()
//    HashingRansomNote().execute()
//    HashingJewelsAndStones().execute()
//    HashingLongestSubstringWithoutRepeatingCharacters().execute()
//    LinkedListExample1().execute()
//    LinkedListExample3().execute()
//    LinkedListMiddleElement().execute()
//    LinkedListRemoveDuplicates().execute()
//    ReversingListExample1().execute()
//    LinkedListSwapNodesInPairs().execute()
//    ReverseLinkedListII().execute()
//    StacksValidParentheses().execute()
//    StacksRemoveAdjacentDuplicates().execute()
//    StacksBackspaceStringCompare().execute()
//    StacksSimplifyPath().execute()
//    StacksMakeStringsGreatAgain().execute()
//    QueuesNumberOfRecentCalls().execute()
//    QueueMovingAverageFromDataStream().execute()
//    QueuesDailyTemperatures().execute()
//    QueuesSlidingWindowMaximum().execute()
    QueuesLongestContinuousSubarray().execute()
}



